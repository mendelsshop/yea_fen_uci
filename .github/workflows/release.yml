name: release all to crates.io

on:
  release:
    types: [published, released, prereleased]
    branches:
      - main
  workflow_dispatch:

jobs:
  Publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup rust
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo publish --token ${{ secrets.CRATES_TOKEN }}   
          
  # Replace occurances of $BIN_NAME with the name of your binary
  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            bin: $BIN_NAME
            # We don't enable the progress feature when targeting
            # musl since there are some dependencies on shared libs
            features: ""
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            bin: $BIN_NAME.exe
            features: progress
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: $BIN_NAME
            features: progress
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - name: Install musl tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y musl-tools
      - name: Checkout
        uses: actions/checkout@v2
      - run: cargo fetch --target ${{ matrix.target }}
      - name: Release build
        shell: bash
        run: |
          if [ "${{ matrix.features }}" != "" ]; then
            cargo build --release --target ${{ matrix.target }} --features ${{ matrix.features }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
      - name: Package
        shell: bash
        run: |
          name=$BIN_NAME
          tag=$(git describe --tags --abbrev=0)
          release_name="$name-$tag-${{ matrix.target }}"
          release_tar="${release_name}.tar.gz"
          mkdir "$release_name"

          if [ "${{ matrix.target }}" != "x86_64-pc-windows-msvc" ]; then
              strip "target/${{ matrix.target }}/release/${{ matrix.bin }}"
          fi

          cp "target/${{ matrix.target }}/release/${{ matrix.bin }}" "$release_name/"
          cp README.md LICENSE-APACHE LICENSE-MIT "$release_name/"
          tar czvf "$release_tar" "$release_name"

          rm -r "$release_name"

          # Windows environments in github actions don't have the gnu coreutils installed,
          # which includes the shasum exe, so we just use powershell instead
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "(Get-FileHash \"${release_tar}\" -Algorithm SHA256).Hash | Out-File -Encoding ASCII -NoNewline \"${release_tar}.sha256\"" | pwsh -c -
          else
            echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
          fi
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "$BIN_NAME*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

